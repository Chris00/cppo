recursivity.cpp:

The environment of GNU cpp macros is the current environment (no
closures) and therefore should allow recursive calls.
However, when it encounters a macro that was already called in the
execution stack, it makes as if the macro was undefined. We could
expect at least a warning.

On the other hand, cppo macros capture the environment at the point
where they are defined and this has the following consequences:

* simplicity: once defined, a macro will always expand identically
* no mutually recursive calls, resulting in predictable behavior


constants.cpp:

cpp does not have real macro constants, as demonstrated by the
example.

cppo on the other hand does, and the result of the macro expansion is
fully determined by its arguments. Therefore a macro of 0 arguments
passed using () is a constant.
